---
nodes:
  nodeDefinitions:
  	- kind: aws_vpc
    	name: Create VPC
      description: Provides AWS VPC resource
      automoton: TERRAFORM
      keywords: [aws, cloud, vpc]
    - kind: aws_subnet
    	name: Create Subnet
      description: Provides AWS Subnet resource
      automoton: TERRAFORM
      keywords: [aws, cloud, subnet]
    - kind: debug
    	name: Debug Message
      description: Prints debug message
      automoton: ANSIBLE
      keywords: [start, in, entry]
    - kind: entry
    	name: Blueprint Entry
      description: Blueprint Ingress node
      automoton: _CORE
      keywords: [start, in, entry]
    - kind: exit
    	name: Blueprint Exit
      description: Blueprint Egress node
      automoton: _CORE
      keywords: [end, out, exit]
  nodes:
  - id: node-001
    name: Create VPC
    automoton: TERRAFORM
    position:
      x: 10
      y: -10
    ingressPorts:
    - id: port-001
      name: In
      type: EXEC
      hasValue: false
    - id: port-002
      name: Name
      type: STRING
      hasValue: true
      value: myVPC
    - id: port-003
      name: CIDR
      type: STRING
      hasValue: true
      value: 10.0.0.0/16
    egressPorts:
    - id: port-004
      name: Out
      type: EXEC
      hasValue: false
    - id: port-005
      name: VPC
      type: OBJECT
      hasValue: false
  - id: node-002
    name: Create Subnet
    automoton: ANSIBLE
    ingressPorts:
    - id: port-006
      name: In
      type: EXEC
      hasValue: false
    - id: port-007
      name: VPC
      type: OBJECT
      hasValue: false
    - id: port-008
      name: CIDR
      type: STRING
      hasValue: true
      value: 10.0.0.0/24
    egressPorts:
    - id: port-009
      name: Out
      type: EXEC
      hasValue: false
    - id: port-010
      name: Subnet
      type: OBJECT
      hasValue: false
    position:
      x: 300
      y: -300
